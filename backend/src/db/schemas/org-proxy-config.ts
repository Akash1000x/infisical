// Code generated by automation script, DO NOT EDIT.
// Automated by pulling database and generating zod schema
// To update. Just run npm run generate:schema
// Written by akhilmhdh.

import { z } from "zod";

import { zodBuffer } from "@app/lib/zod";

import { TImmutableDBKeys } from "./models";

export const OrgProxyConfigSchema = z.object({
  id: z.string().uuid(),
  createdAt: z.date(),
  updatedAt: z.date(),
  orgId: z.string().uuid(),
  encryptedProxyPkiClientCaPrivateKey: zodBuffer,
  encryptedProxyPkiClientCaCertificate: zodBuffer,
  encryptedProxyPkiClientCaCertificateChain: zodBuffer,
  encryptedProxyPkiServerCaPrivateKey: zodBuffer,
  encryptedProxyPkiServerCaCertificate: zodBuffer,
  encryptedProxyPkiServerCaCertificateChain: zodBuffer,
  encryptedProxySshClientCaPrivateKey: zodBuffer,
  encryptedProxySshClientCaPublicKey: zodBuffer,
  encryptedProxySshServerCaPrivateKey: zodBuffer,
  encryptedProxySshServerCaPublicKey: zodBuffer
});

export type TOrgProxyConfig = z.infer<typeof OrgProxyConfigSchema>;
export type TOrgProxyConfigInsert = Omit<z.input<typeof OrgProxyConfigSchema>, TImmutableDBKeys>;
export type TOrgProxyConfigUpdate = Partial<Omit<z.input<typeof OrgProxyConfigSchema>, TImmutableDBKeys>>;
